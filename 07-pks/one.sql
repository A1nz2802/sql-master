-- Crear una tabla de usuarios con una columna de ID serial.
CREATE TABLE users (
  "users_id" SERIAL PRIMARY KEY,
  "username" VARCHAR
);

-- Crear una tabla de usuarios con una columna de ID generada por defecto como Identity
CREATE TABLE users2 (
  "users_id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "username" VARCHAR
);

-- Crear una tabla de usuarios con una columna de ID generada siempre como Identity.
CREATE TABLE users3 (
  "users_id" INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  "username" VARCHAR
);

-- Crear una tabla de usuarios con una columna de ID generada siempre 
-- como Identity, con inicio y aumento personalizado.
CREATE TABLE users4 (
  "users_id" INTEGER GENERATED ALWAYS AS IDENTITY ( START WITH 100 INCREMENT BY 2) PRIMARY KEY,
  "username" VARCHAR
);

-- Crear una tabla de usuarios con una clave primaria compuesta.
CREATE TABLE users5 (
  id1 int,
  id2 int,
  PRIMARY KEY (id1, id2)
)

-- https://www.postgresql.org/docs/current/uuid-ossp.html
-- Crear una extensión UUID y generar un UUID aleatorio.
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
SELECT gen_random_uuid(), uuid_generate_v4();

-- Crear una tabla de usuarios con un UUID generado automáticamente como clave primaria.
CREATE TABLE users6 (
  "user_id" UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  "username" VARCHAR
)

-- Crear una secuencia de usuarios y utilizarla para generar valores predeterminados para la tabla de usuarios.
CREATE SEQUENCE users_sequence;
SELECT CURRVAL('users_sequence'), NEXTVAL('users_sequence'), CURRVAL('users_sequence');
CREATE TABLE users7 (
  "users_id" INTEGER DEFAULT nextval('users_sequence') PRIMARY KEY,
  "username" VARCHAR
)

